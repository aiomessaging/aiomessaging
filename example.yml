# aiomessaging example configuration file
app:
  debug: True
# queue backend configuration
queue:
  backend: rabbitmq
  virtual_host: /
# key-value storage configuration
kvstore:
  backend: dummy
events:
  example_event:
    event_pipeline:  # sequentual
      - tests.tmp.ExampleFilter
      - tests.tmp.ExampleFilter:
        example_kwarg: 1
    generators:
      - tests.tmp.OneMessage
    message_pipeline:
      - tests.tmp.ExampleFilter
    delivery:
      - tests.tmp.DeliveryBackend
    # generators: # parallel
    #   - OneMessage
    #   - OneMessage
    # message_pipeline: # sequental
    #   - add_delivery_info
    # delivery: # parallel by design
    #   - StopIfFailed:
    #     - aiomessaging.pipeline.Pipeline
    #     - aiomessaging.pipeline.Pipeline
    #   - StopIfDelivered:
    #     - aiomessaging.pipeline.Pipeline
    #     - aiomessaging.pipeline.Pipeline
    #   - ContinueIfFailed:
    #     - aiomessaging.pipeline.Pipeline

    # #
    # # Djobit way
    # #
    # filters:
    #   - myapp aiomessaging.FloodFilter
    # generators:
    #   - myapp aiomessaging.ProjectSubscribers
    #   - myapp aiomessaging.UserFollowers
    # pipeline:
    #   - myapp aiomessaging.add_data
    #     - PushStream
    #     - ChromePush
    #     - pmf_digest.Digest
